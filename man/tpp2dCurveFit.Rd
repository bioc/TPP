% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tpp2dCurveFit.R
\name{tpp2dCurveFit}
\alias{tpp2dCurveFit}
\title{Run TPP-CCR analysis for 2D-TPP experiment}
\usage{
tpp2dCurveFit(configFile, data, nCores = 1, naStrs = c("NA", "n/d", "NaN",
  "<NA>"), fcStr = "norm_rel_fc_", idVar = "unique_ID",
  nonZeroCols = "qssm", r2Cutoff = 0.8, fcCutoff = 1.5,
  slopeBounds = c(1, 50), fcTolerance = 0.1)
}
\arguments{
\item{configFile}{list of dataframes, that specifies important details of the 2D-TPP 
experiment for each temperature.}

\item{data}{data.frame, that contains the data of the 2D-TPP 
experiment for each temperature.}

\item{nCores}{numeric value stating how many cores are to be used for computation}

\item{naStrs}{character vector indicating missing values in the data table. 
When reading data from file, this value will be passed on to the argument}

\item{fcStr}{character string indicating which columns contain the actual 
fold change values. Those column names containing the suffix \code{fcStr} 
will be regarded as containing fold change values.}

\item{idVar}{character string indicating which data column provides the 
unique identifiers for each protein.}

\item{nonZeroCols}{character string indicating a column that will be used for
filtering out zero values.}

\item{r2Cutoff}{Quality criterion on dose response curve fit.}

\item{fcCutoff}{Cutoff for highest compound concentration fold change.}

\item{slopeBounds}{Bounds on the slope parameter for dose response curve 
fitting.}

\item{fcTolerance}{tolerance for the fcCutoff parameter. See details.}
}
\value{
A data frames in which the fit results are stored row-wise for each
  protein.
}
\description{
Performs analysis of a TPP-CCR experiment by invoking the routine 
  for TPP-CCR curve fitting for each temperature of the sample.
}
\examples{
data("panob2D_isobQuant_example")
cfg <- panobinostat_2DTPP_config
datRaw <- panobinostat_2DTPP_data
data2d <- tpp2dImport(cfg, datRaw, fcStr = NULL)
fcData2d <- tpp2dComputeFoldChanges(cfg, data2d)
normData2d <- tpp2dNormalize(cfg, fcData2d)
config_ccr <- tpp2dCreateCCRConfigFile(cfg)
ccr2dResults <- tpp2dCurveFit(config_ccr, normData2d)
  
}

